<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">
    <t t-name="sign.SignTemplateSidebarRoleItems">
        <div class="o_sign_sidebar_signer py-3 border-bottom" t-on-click="() => this.onExpandSigner(this.props.id)">
            <div class="o_sign_sidebar_header align-items-center gap-2">
                <!-- Signer role (sign.item.role) dropdown. -->
                <div t-attf-class="o_sign_sidebar_selector d-flex gap-1 flex-grow-1">
                    <div class="o_sign_sidebar_role_input_container w-100">
                        <input type="text"
                            t-att-value="state.roleName"
                            t-attf-class="o_input form-control bg-transparent rounded-0 pe-1 {{ props.isInputFocused ? '' : 'o_sign_sidebar_role_muted_input' }}"
                            t-att-readonly="!props.isInputFocused"
                            t-on-click="() => this.onFocusRoleInput(this.props.id)"
                            t-on-change="ev => this.onChangeRoleName(ev.target.value)"
                            t-on-mouseover="ev => this.updateShowEditLabelIcon(ev, true)"
                            t-on-mouseout="ev => this.updateShowEditLabelIcon(ev, false)"
                        />
                        <i t-if="this.state.showEditLabelIcon" class="fa fa-pencil"/>
                    </div>
                </div>
                <!-- Edit, delete and collapse signer options. -->
                <div class="o_sign_sidebar_signer_options d-flex gap-1 ">
                    <div t-attf-class="{{ 'o_color_responsible_' + props.colorId}} o_sign_item_count">
                        <t t-out="this.props.itemsCount" />
                    </div>
                    <div>
                        <Dropdown>
                            <button class="btn o_sign_sidebar_icon">
                                <i class="fa fa-ellipsis-v"/>
                            </button>
                            <t t-set-slot="content">
                                <DropdownItem onSelected="() => this.openSignRoleRecord()">
                                    <i class="fa fa-edit fa-fw"/>
                                    Edit
                                </DropdownItem>
                                <DropdownItem onSelected="() => this.onDeleteDialog()">
                                    <i class="fa fa-trash-o fa-fw text-danger"/>
                                    Delete
                                </DropdownItem>
                            </t>
                        </Dropdown>
                    </div>
                </div>
            </div>
            <div class="o_sign_sidebar_signer_content">
                <!-- Sign items for the selected role. -->
                <div t-attf-class="o_sign_field_type_toolbar_items mt-3 {{ !state.roleId or props.isCollapsed ? 'd-none' : ''}}">
                    <div class="o_sign_sidebar_item_grid">
                        <t t-foreach="props.signItemTypes" t-as="itemType" t-key="itemType.id">
                            <button
                                type="button"
                                class="o_sign_field_type_button btn btn-secondary border-0 small text-break"
                                t-attf-class="{{ 'o_color_responsible_' + props.colorId }}"
                                t-att-data-color-id="props.colorId"
                                t-att-data-role-id="state.roleId"
                                t-att-data-item-type-id="itemType.id"
                                t-att-data-signer-id="props.id"
                                t-att-data-role-name="state.roleName"
                                title="Drag and Drop a field in the PDF">
                                <span class="o_sign_field_type_button_content d-flex flex-column gap-1">
                                    <i t-attf-class="fa fa-fw #{itemType.icon ? itemType.icon : icon_type[itemType.item_type]} me-2" role="img"/>
                                    <span class="text-start"><t t-esc="itemType.name"/></span>
                                </span>
                            </button>
                        </t>
                    </div>
                </div>
            </div>
        </div>
    </t>
</templates>
